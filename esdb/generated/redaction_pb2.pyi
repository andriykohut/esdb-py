"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import shared_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetEventPositionReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STREAM_IDENTIFIER_FIELD_NUMBER: builtins.int
    STREAM_REVISION_FIELD_NUMBER: builtins.int
    stream_revision: builtins.int
    @property
    def stream_identifier(self) -> shared_pb2.StreamIdentifier: ...
    def __init__(
        self,
        *,
        stream_identifier: shared_pb2.StreamIdentifier | None = ...,
        stream_revision: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["stream_identifier", b"stream_identifier"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["stream_identifier", b"stream_identifier", "stream_revision", b"stream_revision"]) -> None: ...

global___GetEventPositionReq = GetEventPositionReq

@typing.final
class GetEventPositionResp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_POSITIONS_FIELD_NUMBER: builtins.int
    @property
    def event_positions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EventPosition]: ...
    def __init__(
        self,
        *,
        event_positions: collections.abc.Iterable[global___EventPosition] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["event_positions", b"event_positions"]) -> None: ...

global___GetEventPositionResp = GetEventPositionResp

@typing.final
class EventPosition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOG_POSITION_FIELD_NUMBER: builtins.int
    CHUNK_INFO_FIELD_NUMBER: builtins.int
    log_position: builtins.int
    @property
    def chunk_info(self) -> global___ChunkInfo: ...
    def __init__(
        self,
        *,
        log_position: builtins.int = ...,
        chunk_info: global___ChunkInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["chunk_info", b"chunk_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["chunk_info", b"chunk_info", "log_position", b"log_position"]) -> None: ...

global___EventPosition = EventPosition

@typing.final
class ChunkInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    IS_COMPLETE_FIELD_NUMBER: builtins.int
    EVENT_OFFSET_FIELD_NUMBER: builtins.int
    file_name: builtins.str
    version: builtins.int
    is_complete: builtins.bool
    event_offset: builtins.int
    def __init__(
        self,
        *,
        file_name: builtins.str = ...,
        version: builtins.int = ...,
        is_complete: builtins.bool = ...,
        event_offset: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["event_offset", b"event_offset", "file_name", b"file_name", "is_complete", b"is_complete", "version", b"version"]) -> None: ...

global___ChunkInfo = ChunkInfo

@typing.final
class SwitchChunkReq(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_CHUNK_FILE_FIELD_NUMBER: builtins.int
    NEW_CHUNK_FILE_FIELD_NUMBER: builtins.int
    target_chunk_file: builtins.str
    new_chunk_file: builtins.str
    def __init__(
        self,
        *,
        target_chunk_file: builtins.str = ...,
        new_chunk_file: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["new_chunk_file", b"new_chunk_file", "target_chunk_file", b"target_chunk_file"]) -> None: ...

global___SwitchChunkReq = SwitchChunkReq

@typing.final
class SwitchChunkResp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SwitchChunkResp = SwitchChunkResp
